# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-08-11 18:20
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields
import tagulous.models.fields
import tagulous.models.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='_Tagulous_GalaxyInstance_tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField()),
                ('count', models.IntegerField(default=0, help_text='Internal counter of how many times this tag is in use')),
                ('protected', models.BooleanField(default=False, help_text='Will not be deleted when the count reaches 0')),
                ('path', models.TextField(unique=True)),
                ('label', models.CharField(help_text='The name of the tag, without ancestors', max_length=255)),
                ('level', models.IntegerField(default=1, help_text='The level of the tag in the tree')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='api._Tagulous_GalaxyInstance_tags')),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
            },
            bases=(tagulous.models.models.BaseTagTreeModel, models.Model),
        ),
        migrations.CreateModel(
            name='GalaxyInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('url', models.URLField(blank=True, null=True)),
                ('humanname', models.CharField(blank=True, max_length=256, null=True)),
                ('description', models.TextField()),
                ('public', models.BooleanField(default=False)),
                ('norm_users_recent', models.IntegerField(default=0)),
                ('latitude', models.FloatField(default=0)),
                ('longitude', models.FloatField(default=0)),
                ('api_key', models.UUIDField(default=uuid.uuid4, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='IntegerDataPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('value', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tool_name', models.CharField(max_length=64)),
                ('tool_version', models.CharField(max_length=64)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('params', jsonfield.fields.JSONField()),
                ('metrics_core_runtime_seconds', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('metrics_meminfo_swaptotal', models.IntegerField(blank=True, null=True)),
                ('metrics_meminfo_memtotal', models.IntegerField(blank=True, null=True)),
                ('metrics_core_galaxy_slots', models.IntegerField(default=0)),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.GalaxyInstance')),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tool_id', models.CharField(max_length=128)),
                ('tool_name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='ToolVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=32)),
                ('tool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Tool')),
            ],
            options={
                'ordering': ('-version',),
            },
        ),
        migrations.AddField(
            model_name='job',
            name='tool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ToolVersion'),
        ),
        migrations.AddField(
            model_name='galaxyinstance',
            name='jobs_run',
            field=models.ManyToManyField(blank=True, related_name='job_recent_data', to='api.IntegerDataPoint'),
        ),
        migrations.AddField(
            model_name='galaxyinstance',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='galaxyinstance',
            name='tags',
            field=tagulous.models.fields.TagField(_set_tag_meta=True, blank=True, help_text='Enter a comma-separated tag string', to='api._Tagulous_GalaxyInstance_tags', tree=True),
        ),
        migrations.AddField(
            model_name='galaxyinstance',
            name='tools',
            field=models.ManyToManyField(blank=True, to='api.Tool'),
        ),
        migrations.AddField(
            model_name='galaxyinstance',
            name='users_recent',
            field=models.ManyToManyField(blank=True, related_name='user_recent_data', to='api.IntegerDataPoint'),
        ),
        migrations.AddField(
            model_name='galaxyinstance',
            name='users_total',
            field=models.ManyToManyField(blank=True, related_name='user_total_data', to='api.IntegerDataPoint'),
        ),
        migrations.AlterUniqueTogether(
            name='_tagulous_galaxyinstance_tags',
            unique_together=set([('slug', 'parent')]),
        ),
    ]
